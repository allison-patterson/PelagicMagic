% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/envir_functions.R
\name{get_colonydist}
\alias{get_colonydist}
\title{Function to calculate overwater distance from a colony (single point location or set of point locations)}
\usage{
get_colonydist(
  landmask,
  coords,
  out_dir,
  dist_unit = c("m", "km"),
  search_dist = NULL,
  plot = TRUE,
  overwrite = FALSE
)
}
\arguments{
\item{landmask}{A SpatRaster object. Raster cells that are inaccessible (land) should have NA values. All other cells
should have values corresponding to the cost of travelling over that location. In most cases this will be values of
1 (water), however if you want to account for species avoiding certain areas (like ice) cells can have weights to
increase the cost of travel. See example for converting bathymetry to NA/1 raster before running the function.}

\item{coords}{Data frame with columns labelled 'location', 'x', and 'y'. Where location is the
location name used for saving each distance raster, x and y are the location coordinates in the same units as landmask.}

\item{out_dir}{File path to the directory where slope raster will be saved. String.}

\item{dist_unit}{Unit for the distances One of "m" or "km".}

\item{search_dist}{Optional search distance (in m) to look for water locations if a location is located on land.}

\item{plot}{Should the distance rasters be plotted. Logical.}

\item{overwrite}{Should existing files be overwritten. Logical.}
}
\value{
A separate ncdf file with overwater distance calculate for each record in coords. Output saved to out_dir.
}
\description{
Function to calculate overwater distance from a colony (single point location or set of point locations)
}
\examples{

# Get bathymetry
get_bathymetry(out_dir = 'tmp',
               region = c(-68, -63, 44, 46),
               overwrite = FALSE,
               stride = 1,
               vars = NULL)

m <- terra::rast('tmp/bathymetry.nc')
m <- terra::ifel(m >=0, NA, 1)

my_cols <- data.frame(location = c('loc1', 'loc2'),
                      x = c(-66.718, -66.387),
                      y = c(44.702, 44.240)
)

get_colonydist(landmask = m,
               coords = my_cols,
               out_dir = 'tmp/colony_dist',
               dist_unit = c('km'),
               search_dist = NULL,
               plot = TRUE,
               overwrite = TRUE)

unlink('tmp', recursive = TRUE)



}
